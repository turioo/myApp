import React, { useState } from 'react';
import { TouchableOpacity, View, Text } from 'react-native';
import LinearGradient from 'react-native-linear-gradient';
import styles from './styles';
import Header from '../../../../features/Header';
import Input from '../../../../atoms/Input';
import { Controller, useForm } from 'react-hook-form';
import Button from '../../../../atoms/Button';
import ValidationError from '../../../../atoms/ValidationError';
import Svg, { Path } from 'react-native-svg';
import { StyleSheet } from 'react-native';
import DismissKeyboardView from '../../../../hoc/dismissKeyboard';

type Props = {
  navigation: {
    navigate: (param: string) => void;
    goBack: () => void;
  };
};
type ColorProps = {
  color: string;
};
type FormData = {
  title: string;
  text: string;
  type: number;
  priority: number;
};
const stylesActive = StyleSheet.create({
  type: {
    width: 300,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingHorizontal: 5,
    paddingVertical: 5,
    borderWidth: 1,
    borderColor: '#BC181E',
    marginBottom: 10,
  },
  priority: {
    width: 90,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingHorizontal: 5,
    paddingVertical: 5,
    borderWidth: 1,
    borderColor: '#BC181E',
    marginBottom: 10,
  },
});
const PostsCreate = ({ navigation }: Props): JSX.Element => {
  function SvgToday() {
    return (
      <Svg width="15" height="15" viewBox="0 0 12 12">
        <Path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M5.58789 0.412698C5.58789 0.190476 5.77837 0 6.00059 0C6.22281 0 6.41329 0.190476 6.41329 0.412698V1.63492C6.41329 1.85714 6.22281 2.04762 6.00059 2.04762C5.77837 2.04762 5.58789 1.85714 5.58789 1.63492V0.412698ZM8.12723 3.87302C7.58755 3.33334 6.82564 2.98413 6.00025 2.98413C5.17485 2.98413 4.41295 3.31746 3.87326 3.87302C3.33358 4.4127 2.98438 5.17461 2.98438 6C2.98438 6.8254 3.33358 7.58731 3.87326 8.12699C4.41295 8.66667 5.17485 9.01588 6.00025 9.01588C6.82564 9.01588 7.58755 8.68254 8.12723 8.12699C8.66691 7.58731 9.01612 6.8254 9.01612 6C9.01612 5.17461 8.68279 4.4127 8.12723 3.87302ZM7.5558 7.55556C7.15898 7.95238 6.60342 8.19048 6.00025 8.19048C5.39707 8.19048 4.84152 7.95238 4.44469 7.55556C4.04787 7.15873 3.80977 6.60318 3.80977 6C3.80977 5.39683 4.04787 4.84127 4.44469 4.44445C4.84152 4.04762 5.39707 3.80953 6.00025 3.80953C6.60342 3.80953 7.15898 4.04762 7.5558 4.44445C7.95263 4.84127 8.19072 5.39683 8.19072 6C8.19072 6.60318 7.95263 7.15873 7.5558 7.55556ZM11.5871 5.58731H10.3648C10.1426 5.58731 9.95215 5.77779 9.95215 6.00001C9.95215 6.22223 10.1426 6.41271 10.3648 6.41271H11.5871C11.8093 6.41271 11.9998 6.22223 11.9998 6.00001C11.9998 5.77779 11.8093 5.58731 11.5871 5.58731ZM5.58789 10.3651C5.58789 10.1429 5.77837 9.95239 6.00059 9.95239C6.22281 9.95239 6.41329 10.1429 6.41329 10.3651V11.5873C6.41329 11.8095 6.22281 12 6.00059 12C5.77837 12 5.58789 11.8095 5.58789 11.5873V10.3651ZM10.2383 9.66669L9.36528 8.79367C9.22242 8.63494 8.95258 8.63494 8.79385 8.79367C8.63512 8.9524 8.63512 9.20637 8.79385 9.3651L9.66687 10.2381C9.8256 10.3968 10.0796 10.3968 10.2383 10.2381C10.397 10.0794 10.397 9.82542 10.2383 9.66669ZM10.2539 1.7619C10.0952 1.60317 9.84122 1.60317 9.68249 1.7619L8.80948 2.63492C8.65075 2.79364 8.65075 3.04761 8.80948 3.20634C8.95233 3.36507 9.22217 3.36507 9.3809 3.20634L10.2539 2.33333C10.4126 2.1746 10.4126 1.92063 10.2539 1.7619ZM0.412698 5.58731H1.63492C1.85714 5.58731 2.04762 5.77779 2.04762 6.00001C2.04762 6.22223 1.85714 6.41271 1.63492 6.41271H0.412698C0.174603 6.41271 0 6.22223 0 6.00001C0 5.77779 0.190476 5.58731 0.412698 5.58731ZM3.19045 8.79367C3.04759 8.63494 2.77775 8.63494 2.61902 8.79367L1.746 9.66669C1.58727 9.82542 1.58727 10.0794 1.746 10.2381C1.90473 10.3968 2.1587 10.3968 2.31743 10.2381L3.19045 9.3651C3.34918 9.20637 3.34918 8.9524 3.19045 8.79367ZM2.31743 1.7619L3.19045 2.63492C3.34918 2.79364 3.34918 3.04761 3.19045 3.20634C3.03172 3.36507 2.77775 3.36507 2.61902 3.20634L1.746 2.33333C1.58727 2.1746 1.58727 1.92063 1.746 1.7619C1.90473 1.60317 2.1587 1.60317 2.31743 1.7619Z"
          fill="#6DA832"
        />
      </Svg>
    );
  }
  function SvgWeek() {
    return (
      <Svg width="15" height="15" viewBox="0 0 10 12">
        <Path
          d="M7.75 2.5C7.888 2.5 8 2.388 8 2.25V1.5H8.75C9.1635 1.5 9.5 1.8365 9.5 2.25V10.75C9.5 11.1635 9.1635 11.5 8.75 11.5H1.75C1.3365 11.5 0.999998 11.1635 0.999998 10.75V2.25C0.999998 1.8365 1.3365 1.5 1.75 1.5H2.5V2.25C2.5 2.388 2.612 2.5 2.75 2.5C2.888 2.5 3 2.388 3 2.25V1.5H4.75V2.25C4.75 2.388 4.862 2.5 5 2.5C5.138 2.5 5.25 2.388 5.25 2.25V1.5H7.5V2.25C7.5 2.388 7.612 2.5 7.75 2.5ZM1.75 1H2.5V0.25C2.5 0.112 2.612 0 2.75 0C2.888 0 3 0.112 3 0.25V1H4.75V0.25C4.75 0.112 4.862 0 5 0C5.138 0 5.25 0.112 5.25 0.25V1H7.5V0.25C7.5 0.112 7.612 0 7.75 0C7.888 0 8 0.112 8 0.25V1H8.75C9.439 1 10 1.561 10 2.25V10.75C10 11.439 9.439 12 8.75 12H1.75C1.061 12 0.499998 11.439 0.499998 10.75V2.25C0.499998 1.561 1.061 1 1.75 1ZM8 8.75C8 8.888 7.888 9 7.75 9H2.25C2.112 9 2 8.888 2 8.75C2 8.612 2.112 8.5 2.25 8.5H7.75C7.888 8.5 8 8.612 8 8.75ZM2.25 7H7.75C7.888 7 8 6.888 8 6.75C8 6.612 7.888 6.5 7.75 6.5H2.25C2.112 6.5 2 6.612 2 6.75C2 6.888 2.112 7 2.25 7ZM7.75 5H4.75C4.612 5 4.5 4.888 4.5 4.75C4.5 4.612 4.612 4.5 4.75 4.5H7.75C7.888 4.5 8 4.612 8 4.75C8 4.888 7.888 5 7.75 5Z"
          fill="#E19A30"
        />
      </Svg>
    );
  }
  function SvgMonthly() {
    return (
      <Svg width="15" height="15" viewBox="0 0 12 12">
        <Path
          d="M9.16441 5.89345H10.0015C10.1907 5.89345 10.3447 5.73949 10.3447 5.55026V4.71321C10.3447 4.52398 10.1907 4.37002 10.0015 4.37002H9.16441C8.97518 4.37002 8.82122 4.52398 8.82122 4.71321V5.55026C8.82122 5.73949 8.97518 5.89345 9.16441 5.89345ZM9.17278 4.72158H9.99309V5.54189H9.17278V4.72158ZM9.16441 8.12002H10.0015C10.1907 8.12002 10.3447 7.96605 10.3447 7.77682V6.93977C10.3447 6.75054 10.1907 6.59658 10.0015 6.59658H9.16441C8.97518 6.59658 8.82122 6.75054 8.82122 6.93977V7.77682C8.82122 7.96605 8.97518 8.12002 9.16441 8.12002ZM9.17278 6.94814H9.99309V7.76845H9.17278V6.94814ZM6.77576 5.89345H7.6128C7.80204 5.89345 7.956 5.73949 7.956 5.55026V4.71321C7.956 4.52398 7.80204 4.37002 7.6128 4.37002H6.77576C6.58652 4.37002 6.43256 4.52398 6.43256 4.71321V5.55026C6.43256 5.73949 6.58652 5.89345 6.77576 5.89345ZM6.78413 4.72158H7.60444V5.54189H6.78413V4.72158ZM2.83549 8.71875H1.99845C1.80921 8.71875 1.65525 8.87271 1.65525 9.06194V9.89899C1.65525 10.0882 1.80921 10.2422 1.99845 10.2422H2.83549C3.02473 10.2422 3.17869 10.0882 3.17869 9.89899V9.06194C3.17869 8.87271 3.02473 8.71875 2.83549 8.71875ZM2.82713 9.89062H2.00681V9.07031H2.82713V9.89062ZM2.83549 4.37002H1.99845C1.80921 4.37002 1.65525 4.52398 1.65525 4.71321V5.55026C1.65525 5.73949 1.80921 5.89345 1.99845 5.89345H2.83549C3.02473 5.89345 3.17869 5.73949 3.17869 5.55026V4.71321C3.17869 4.52395 3.02473 4.37002 2.83549 4.37002ZM2.82713 5.54189H2.00681V4.72158H2.82713V5.54189ZM6.77576 8.06782H7.6128C7.80204 8.06782 7.956 7.91386 7.956 7.72463V6.88758C7.956 6.69834 7.80204 6.54438 7.6128 6.54438H6.77576C6.58652 6.54438 6.43256 6.69834 6.43256 6.88758V7.72463C6.43256 7.91386 6.58652 8.06782 6.77576 8.06782ZM6.78413 6.89595H7.60444V7.71626H6.78413V6.89595ZM10.5192 0.803297H9.7677V0.534539C9.7677 0.239789 9.52791 0 9.23316 0H9.15244C8.85771 0 8.61792 0.239789 8.61792 0.534539V0.803297H3.38198V0.534539C3.38198 0.239789 3.1422 0 2.84745 0H2.76673C2.47198 0 2.23219 0.239789 2.23219 0.534539V0.803297H1.48066C0.995391 0.803297 0.600586 1.1981 0.600586 1.68337V11.1211C0.600586 11.6057 0.994852 12 1.47949 12H10.5205C11.0051 12 11.3994 11.6057 11.3994 11.1211V1.68337C11.3993 1.1981 11.0045 0.803297 10.5192 0.803297ZM8.96949 0.534539C8.96949 0.433641 9.05156 0.351562 9.15246 0.351562H9.23318C9.33408 0.351562 9.41616 0.433641 9.41616 0.534539V0.803297H8.96949V0.534539ZM2.58377 0.534539C2.58377 0.433641 2.66585 0.351562 2.76675 0.351562H2.84747C2.94837 0.351562 3.03045 0.433641 3.03045 0.534539V0.803297H2.5838V0.534539H2.58377ZM11.0478 11.1211C11.0478 11.4119 10.8112 11.6484 10.5204 11.6484H1.47947C1.18868 11.6484 0.952125 11.4119 0.952125 11.1211V11.12C1.09941 11.231 1.28248 11.2969 1.48066 11.2969H8.60761C8.84269 11.2969 9.0637 11.2053 9.22992 11.0391L11.0478 9.22123V11.1211ZM9.05056 10.7213C9.06434 10.6644 9.07184 10.6051 9.07184 10.544V9.37064C9.07184 9.14939 9.25186 8.96937 9.47313 8.96937H10.6465C10.7075 8.96937 10.7669 8.96187 10.8237 8.94809L9.05056 10.7213ZM11.0478 3.31533H3.55777C3.46069 3.31533 3.38198 3.39403 3.38198 3.49111C3.38198 3.58819 3.46069 3.66689 3.55777 3.66689H11.0478V8.21653C11.0478 8.4378 10.8678 8.61783 10.6465 8.61783H9.47313C9.05801 8.61783 8.72027 8.95556 8.72027 9.37066V10.544C8.72027 10.7653 8.54025 10.9453 8.319 10.9453H1.48066C1.18924 10.9453 0.952148 10.7082 0.952148 10.4168V3.66689H2.85464C2.95172 3.66689 3.03042 3.58819 3.03042 3.49111C3.03042 3.39403 2.95172 3.31533 2.85464 3.31533H0.952125V1.68337C0.952125 1.39195 1.18922 1.15486 1.48064 1.15486H2.23219V1.6717C2.23219 1.96645 2.47198 2.20624 2.76673 2.20624C2.86381 2.20624 2.94251 2.12754 2.94251 2.03046C2.94251 1.93338 2.86381 1.85468 2.76673 1.85468C2.66583 1.85468 2.58375 1.7726 2.58375 1.6717V1.15486H8.61792V1.6717C8.61792 1.96645 8.85771 2.20624 9.15246 2.20624C9.24954 2.20624 9.32824 2.12754 9.32824 2.03046C9.32824 1.93338 9.24954 1.85468 9.15246 1.85468C9.05156 1.85468 8.96949 1.7726 8.96949 1.6717V1.15486H10.5193C10.8107 1.15486 11.0478 1.39195 11.0478 1.68337V3.31533ZM2.83549 6.54438H1.99845C1.80921 6.54438 1.65525 6.69834 1.65525 6.88758V7.72463C1.65525 7.91386 1.80921 8.06782 1.99845 8.06782H2.83549C3.02473 8.06782 3.17869 7.91386 3.17869 7.72463V6.88758C3.17869 6.69832 3.02473 6.54438 2.83549 6.54438ZM2.82713 7.71626H2.00681V6.89595H2.82713V7.71626ZM4.3871 5.89345H5.22415C5.41338 5.89345 5.56734 5.73949 5.56734 5.55026V4.71321C5.56734 4.52398 5.41338 4.37002 5.22415 4.37002H4.3871C4.19787 4.37002 4.04391 4.52398 4.04391 4.71321V5.55026C4.04391 5.73949 4.19787 5.89345 4.3871 5.89345ZM4.39547 4.72158H5.21578V5.54189H4.39547V4.72158ZM6.78391 9.89062C6.77955 9.79741 6.70261 9.72321 6.60832 9.72321C6.51124 9.72321 6.43254 9.80191 6.43254 9.89899C6.43254 10.0882 6.5865 10.2422 6.77573 10.2422H7.61278C7.80202 10.2422 7.95598 10.0882 7.95598 9.89899V9.06194C7.95598 8.87271 7.80202 8.71875 7.61278 8.71875H6.77573C6.5865 8.71875 6.43254 8.87271 6.43254 9.06194V9.30335C6.43254 9.40043 6.51124 9.47913 6.60832 9.47913C6.7054 9.47913 6.7841 9.40043 6.7841 9.30335V9.07031H7.60441V9.89062H6.78391ZM4.3871 8.06782H5.22415C5.41338 8.06782 5.56734 7.91386 5.56734 7.72463V6.88758C5.56734 6.69834 5.41338 6.54438 5.22415 6.54438H4.3871C4.19787 6.54438 4.04391 6.69834 4.04391 6.88758V7.72463C4.04391 7.91386 4.19787 8.06782 4.3871 8.06782ZM4.39547 6.89595H5.21578V7.71626H4.39547V6.89595ZM4.3871 10.2422H5.22415C5.41338 10.2422 5.56734 10.0882 5.56734 9.89899V9.06194C5.56734 8.87271 5.41338 8.71875 5.22415 8.71875H4.3871C4.19787 8.71875 4.04391 8.87271 4.04391 9.06194V9.89899C4.04391 10.0882 4.19787 10.2422 4.3871 10.2422ZM4.39547 9.07031H5.21578V9.89062H4.39547V9.07031Z"
          fill="#2879A7"
        />
      </Svg>
    );
  }
  function SvgPriority(props: ColorProps) {
    return (
      <Svg width="12" height="17" viewBox="0 0 12 17">
        <Path
          d="M11.2624 0.686973C10.5373 0.224719 9.76424 0 8.89912 0C7.86405 0 6.84802 0.32383 5.86546 0.637002C4.90559 0.942936 3.99893 1.2319 3.10152 1.23197C3.1014 1.23197 3.10131 1.23197 3.10118 1.23197C2.50121 1.23197 1.95796 1.09703 1.44824 0.820848V0.498047C1.44824 0.222992 1.23837 0 0.979492 0C0.720617 0 0.510742 0.222992 0.510742 0.498047V1.114V7.88398V16.502C0.510742 16.777 0.720617 17 0.979492 17C1.23837 17 1.44824 16.777 1.44824 16.502V8.68106C1.96596 8.89356 2.51237 8.99805 3.10155 8.99805C4.13659 8.99805 5.15252 8.67422 6.13502 8.36104C7.09496 8.05508 8.00168 7.76608 8.89912 7.76608C9.58949 7.76608 10.2047 7.94435 10.78 8.31111C10.9248 8.40341 11.1051 8.40587 11.2521 8.31745C11.3991 8.22903 11.4899 8.06348 11.4899 7.88405V1.11403C11.4899 0.939084 11.4036 0.776953 11.2624 0.686973ZM5.86568 7.40699C4.90571 7.71295 3.99899 8.00195 3.10159 8.00195C2.5014 8.00195 1.95802 7.86721 1.44827 7.59103V1.91137C1.9659 2.12384 2.51221 2.2281 3.10121 2.22806C3.10131 2.22806 3.10152 2.22806 3.10165 2.22806C4.13659 2.228 5.15246 1.9042 6.13487 1.59106C7.09484 1.28509 8.00165 0.996094 8.89912 0.996094C9.4993 0.996094 10.0427 1.13083 10.5524 1.40698V7.08671C10.0347 6.87421 9.48827 6.76998 8.89912 6.76998C7.86412 6.76998 6.84815 7.09381 5.86568 7.40699Z"
          fill={props.color}
        />
      </Svg>
    );
  }

  const {
    control,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = (data: FormData) => {
    data.type = type;
    data.priority = priority;
    console.log(data);
    navigation.goBack();
  };

  const [type, setType] = useState(1);
  const [priority, setPriority] = useState(0);

  return (
    <View style={styles.wrapper}>
      <View style={styles.container}>
        <Header navigation={navigation} />
        <Controller
          control={control}
          rules={{
            required: true,
          }}
          render={({ field: { onChange, onBlur, value } }) => (
            <Input
              onBlur={onBlur}
              onChangeText={onChange}
              value={value}
              placeholder="Title"
              security={false}
            />
          )}
          name="title"
          defaultValue=""
        />
        {errors.title?.type === 'required' && (
          <ValidationError message={'This field is required'} />
        )}
        <Controller
          control={control}
          rules={{
            required: true,
          }}
          render={({ field: { onChange, onBlur, value } }) => (
            <Input
              onBlur={onBlur}
              onChangeText={onChange}
              value={value}
              multiline={true}
              placeholder="Description"
              security={false}
            />
          )}
          name="description"
          defaultValue=""
        />
        {errors.description?.type === 'required' && (
          <ValidationError message={'This field is required'} />
        )}
        <View style={styles.types}>
          <TouchableOpacity onPress={() => setType(1)}>
            <View style={type === 1 ? stylesActive.type : styles.type}>
              <View style={styles.typeImage}>
                <SvgToday />
              </View>
              <Text style={styles.typeTextGreen}>Today</Text>
            </View>
          </TouchableOpacity>
          <TouchableOpacity onPress={() => setType(2)}>
            <View style={type === 2 ? stylesActive.type : styles.type}>
              <View style={styles.typeImage}>
                <SvgWeek />
              </View>
              <Text style={styles.typeTextGreen}>This week</Text>
            </View>
          </TouchableOpacity>
          <TouchableOpacity onPress={() => setType(3)}>
            <View style={type === 3 ? stylesActive.type : styles.type}>
              <View style={styles.typeImage}>
                <SvgMonthly />
              </View>
              <Text style={styles.typeTextGreen}>This month</Text>
            </View>
          </TouchableOpacity>
        </View>
        <View style={styles.prioritys}>
          <TouchableOpacity onPress={() => setPriority(0)}>
            <View
              style={priority === 0 ? stylesActive.priority : styles.priority}>
              <View style={styles.priorityImage}>
                <SvgPriority color="#FFFFFF" />
              </View>
            </View>
          </TouchableOpacity>
          <TouchableOpacity onPress={() => setPriority(1)}>
            <View
              style={priority === 1 ? stylesActive.priority : styles.priority}>
              <View style={styles.priorityImage}>
                <SvgPriority color="#E19A30" />
              </View>
            </View>
          </TouchableOpacity>
          <TouchableOpacity onPress={() => setPriority(2)}>
            <View
              style={priority === 2 ? stylesActive.priority : styles.priority}>
              <View style={styles.priorityImage}>
                <SvgPriority color="#BC181E" />
              </View>
            </View>
          </TouchableOpacity>
        </View>
        <TouchableOpacity onPress={handleSubmit(onSubmit)}>
          <Button title={'Add Post'} />
        </TouchableOpacity>
      </View>
      <LinearGradient
        colors={['transparent', '#ac2121']}
        style={styles.background}
      />
    </View>
  );
};
export default PostsCreate;
